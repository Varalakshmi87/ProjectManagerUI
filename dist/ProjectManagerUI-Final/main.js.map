{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/ErrorStateMatcher.ts","webpack:///./src/app/FilterPipe.ts","webpack:///./src/app/ParentTaskDialogData.ts","webpack:///./src/app/Project.ts","webpack:///./src/app/ProjectDialogData.ts","webpack:///./src/app/Task.ts","webpack:///./src/app/User.ts","webpack:///./src/app/UserDialogData.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/parenttask-search/parenttask-search.component.css","webpack:///./src/app/parenttask-search/parenttask-search.component.html","webpack:///./src/app/parenttask-search/parenttask-search.component.ts","webpack:///./src/app/project-manager/project-manager.component.css","webpack:///./src/app/project-manager/project-manager.component.html","webpack:///./src/app/project-manager/project-manager.component.ts","webpack:///./src/app/project-search/project-search.component.css","webpack:///./src/app/project-search/project-search.component.html","webpack:///./src/app/project-search/project-search.component.ts","webpack:///./src/app/project-service.service.ts","webpack:///./src/app/task-manager-home/task-manager-home.component.css","webpack:///./src/app/task-manager-home/task-manager-home.component.html","webpack:///./src/app/task-manager-home/task-manager-home.component.ts","webpack:///./src/app/task-service.service.ts","webpack:///./src/app/user-manager/user-manager.component.css","webpack:///./src/app/user-manager/user-manager.component.html","webpack:///./src/app/user-manager/user-manager.component.ts","webpack:///./src/app/user-search/user-search.component.css","webpack:///./src/app/user-search/user-search.component.html","webpack:///./src/app/user-search/user-search.component.ts","webpack:///./src/app/user-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {FormControl,FormGroupDirective,NgForm,Validator} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher \r\n{\r\n    isErrorState(control:FormControl | null, form:FormGroupDirective | NgForm |null):boolean\r\n    {\r\n        const isSubmitted = form && form.submitted;\r\n        return !!(control && control.invalid &&(control.dirty||control.touched||isSubmitted));\r\n    }\r\n}","import {Pipe,PipeTransform} from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n    name:'FilterPipe'\r\n})\r\n\r\nexport class FilterPipe implements PipeTransform{\r\n\r\n    transform(value:any,args?:any):any{\r\n        if(!value) {return null;}\r\n        if(!args) {return value;}\r\n\r\n        args = args.toLowerCase();\r\n        return value.filter(function(item:any)\r\n    {\r\nreturn JSON.stringify(item).toLowerCase().includes(args)\r\n    })\r\n    }\r\n}","export class ParentTaskDialogData {\r\n    public Parent_Id: number;\r\n    public Parent_Task: string;\r\n}","import {User} from './user';\r\n\r\nexport class Project{\r\n    public Project_ID:number;\r\n    public ProjectName: string;\r\n    public StartDate?: Date;\r\n    public EndDate?: Date;\r\n    public Priority:number;\r\n    public Userid?: number;\r\n    public ManagerName : string;\r\n    public TotalTaskCount:number;\r\n    public lstUser:User[] ;\r\n    public CompletedTaskCount:number;\r\n    public IsCreate?: boolean= false;\r\n}","export class ProjectDialogData{\r\n    public Project_ID:number;\r\n    public ProjectName: string;\r\n}","import {User} from './user';\r\nimport {Project} from './Project';\r\n\r\nexport class Task{\r\n    public TaskId?:number;\r\n    public Parent_Id?:number;\r\n    public Project_Id?:number;\r\n    public Task?: string;\r\n    public StartDate?: Date;\r\n    public EndDate?: Date;\r\n    public Priority?:number;\r\n    public Userid?: number;\r\n    public Status?:string;\r\n    public ProjectName?: string;\r\n    public ParentTaskName?: string;\r\n    public TaskUserName?: string;\r\n    public ProjectDTOName?: string;\r\n    public ParentDTOName?: string;\r\n\r\n    public User?:User[] ;\r\n    public Parent?: ParentTask[] ;\r\n    public Project?:Project[] ;\r\n    \r\n    public IsParentTask?: boolean;\r\n    public IsTaskEnded?: boolean;\r\n\r\n    public IsCreate?: boolean= false;\r\n}\r\nexport class ParentTask{\r\n    public Parent_Id?:number;\r\n    public Parent_Task?:string;\r\n}\r\nexport class SearchTask\r\n{\r\n    public Task?:string;\r\n    public ParentTask?:string;\r\n    public PriorityFrom?:number;    \r\n    public StartDate?: Date;\r\n    public EndDate?: Date;\r\n    public PriorityTo?:number;\r\n    }","export class User{\r\n    public User_id: number;\r\n    public FirstName : string;\r\n    public LastName:string;\r\n    public Employee_ID:number;\r\n    public Project_ID?:number ;\r\n    public TaskI_id?:number;\r\n    public IsCreate?: boolean= false;\r\n}","export class UserDialogData{\r\n    public User_id: number;\r\n    public FirstName : string;\r\n    public LastName:string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {Routes,RouterModule} from '@angular/router';\nimport { TaskManagerHomeComponent } from './task-manager-home/task-manager-home.component';\n\nconst routes:Routes = [\n{\n  path:'ProjectManager',component:TaskManagerHomeComponent\n},\n{\n  path:'',redirectTo:'/ProjectManager',pathMatch:'full'\n}\n];\n\n@NgModule({\n\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".titlebar\\r\\n{\\r\\n    background-color: rgb(255, 196, 196);\\r\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\r\\n    font-size: 5mm;\\r\\n    background:   rgba(209, 127, 184, 0.842);\\r\\n    color: ivory;\\r\\n}\"","module.exports = \"<mat-toolbar class=\\\"titlebar\\\">{{title}}</mat-toolbar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Project Manager Case Study';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { UserSearchComponent } from './user-search/user-search.component';\nimport { ParenttaskSearchComponent } from './parenttask-search/parenttask-search.component';\nimport { UserManagerComponent } from './user-manager/user-manager.component';\nimport { ProjectSearchComponent } from './project-search/project-search.component';\nimport { TaskManagerHomeComponent } from './task-manager-home/task-manager-home.component';\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {MaterialModule} from './material/material.module';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FilterPipe} from './FilterPipe'; \nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TaskServiceService} from './task-service.service';\nimport {UserServiceService} from './user-service.service';\nimport {ProjectServiceService} from './project-service.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserSearchComponent,\n        ParenttaskSearchComponent,\n        UserManagerComponent,\n    ProjectSearchComponent,\n    TaskManagerHomeComponent,\n    ProjectManagerComponent,\n    FilterPipe,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    NgbModal,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [TaskServiceService,ProjectServiceService,UserServiceService],\n  bootstrap: [AppComponent],\n  entryComponents: [UserSearchComponent,ParenttaskSearchComponent,ProjectSearchComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule,MatNativeDateModule,MatInputModule,MatIconModule,MatTableModule,MatSliderModule,MatSlideToggleModule,MatSnackBarModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n@NgModule({\n  imports: [\n    CommonModule,MatButtonModule,MatNativeDateModule,MatInputModule,MatIconModule,MatTableModule,\n    MatSliderModule,MatSlideToggleModule,MatSnackBarModule,MatToolbarModule,MatCardModule,\n    MatDialogModule,MatTabsModule,MatPaginatorModule,MatSelectModule,MatDividerModule,\n    MatDatepickerModule,MatFormFieldModule,MatCheckboxModule\n  ],\n  exports:[\n    CommonModule,MatButtonModule,MatNativeDateModule,MatInputModule,MatIconModule,MatTableModule,\n    MatSliderModule,MatSlideToggleModule,MatSnackBarModule,MatToolbarModule,MatCardModule,\n    MatDialogModule,MatTabsModule,MatPaginatorModule,MatSelectModule,MatDividerModule,\n    MatDatepickerModule,MatFormFieldModule,MatCheckboxModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 250px;\\r\\n  font-family: 'Courier New', Courier, monospace !important;\\r\\n}\\r\\n\\r\\n.example-header {\\r\\n  min-height: 54px;\\r\\n  padding: 8px 20px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 12px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 450px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter ParentTask\\\">\\n    </mat-form-field>\\n    <mat-table #table [dataSource]=\\\"dataSourceParent\\\">\\n\\n      <ng-container matColumnDef=\\\"Parent_Id\\\">\\n        <mat-header-cell *matHeaderCellDef> Parent_Id </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let ParentTask\\\"> {{ParentTask.Parent_Id}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Parent_Task\\\">\\n        <mat-header-cell *matHeaderCellDef> Parent_Task </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let ParentTask\\\"> {{ParentTask.Parent_Task}} </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let ParentTask\\\">\\n          <div>\\n            <button mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"ParentTask.Parent_Id\\\" [mat-dialog-close]=\\\"ParentTask\\\" color=\\\"primary\\\">\\n              Select</button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5]\\\" showFirstLastButtons></mat-paginator>\\n  </mat-dialog-content>\\n</div>\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange, MatPaginator, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { TaskServiceService } from '../task-service.service';\nimport { ParentTaskDialogData } from '../ParentTaskDialogData';\nimport { ParentTask } from '../Task';\n\n@Component({\n  selector: 'app-parenttask-search',\n  templateUrl: './parenttask-search.component.html',\n  styleUrls: ['./parenttask-search.component.css']\n})\nexport class ParenttaskSearchComponent implements OnInit {\n\n  constructor(private taskService: TaskServiceService, public dialogRef: MatDialogRef<ParenttaskSearchComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ParentTaskDialogData) { }\n\n    displayedColumns = ['Parent_Id', 'Parent_Task', 'Action'];\n    dataSourceParent: MatTableDataSource<ParentTask>;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    ngOnInit() {\n      this.taskService.getParents().subscribe(a => this.setData(a));\n    }\n    applyFilter(filterValue: string) {\n      this.dataSourceParent.filter = filterValue.trim().toLowerCase();\n    }\n    setData(data: any) {\n      this.dataSourceParent = new MatTableDataSource(data);\n      this.dataSourceParent.paginator = this.paginator;\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 250px;\\r\\n    font-family: 'Courier New', Courier, monospace !important;\\r\\n  }\\r\\n  \\r\\n  .example-header {\\r\\n    min-height: 54px;\\r\\n    padding: 8px 20px 0;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 12px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 450px;\\r\\n  }\\r\\n  \\r\\n  .customMatError{\\r\\n    position: absolute;\\r\\n    top:30px;\\r\\n    font-size: 10px;\\r\\n    color: coral;\\r\\n}\"","module.exports = \"<ng-template #contentCreateProject>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"creatingProjectForm.Project_Id\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Add Project</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"creatingProjectForm.Project_Id\\\" (click)=\\\"cancelUpdateProject();CreatingProjectForm.resetForm()\\\"\\n    color=\\\"accent\\\">\\n    <mat-icon>{{'clear'}}</mat-icon>Reset</button>\\n</ng-template>\\n<ng-template #contentUpdateProject>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"creatingProjectForm.Project_Id\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Update Project</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"creatingProjectForm.Project_Id\\\" (click)=\\\"cancelUpdateProject();CreatingProjectForm.resetForm()\\\"\\n    color=\\\"warn\\\">\\n    <mat-icon>{{'cancel'}}</mat-icon>Cancel</button>\\n</ng-template>\\n\\n<div class=\\\"example-container col-md-4 offset-md-4 mt-4\\\">\\n  <form #CreatingProjectForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnProjectFormSubmit(CreatingProjectForm)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Project Name\\\" required name=\\\"ProjectName\\\" [(ngModel)]=\\\"creatingProjectForm.ProjectName\\\" #ProjectName=\\\"ngModel\\\"\\n      />\\n      <input type=\\\"hidden\\\" [(ngModel)]=\\\"creatingProjectForm.Project_Id\\\" name=\\\"Project_Id\\\">\\n      <mat-error>\\n        Project Name is\\n        <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n    <div class=\\\"example-full-width\\\">\\n      <mat-checkbox [(ngModel)]=\\\"disabled\\\" (change)=\\\"onSetDateChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">Set Start and End Date</mat-checkbox>\\n    </div>\\n    <mat-form-field class=\\\"example-full-width col-md-6\\\">\\n      <input (dateChange)=\\\"CompareDates()\\\" [disabled]=\\\"!(disabled)\\\"  matInput [matDatepicker]=\\\"picker1\\\"\\n        name=\\\"Start_Date\\\" placeholder=\\\"Start Date\\\" [(ngModel)]=\\\"creatingProjectForm.Start_Date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker1></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width col-md-6\\\">\\n      <input (dateChange)=\\\"CompareDates()\\\" [disabled]=\\\"!(disabled)\\\"  matInput [matDatepicker]=\\\"picker2\\\"\\n        name=\\\"End_Date\\\" placeholder=\\\"End Date\\\" [(ngModel)]=\\\"creatingProjectForm.End_Date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker2></mat-datepicker>\\n      <div class=\\\"customMatError mat-form-field-subscript-wrapper\\\" *ngIf=\\\"isProjectEndDateLess\\\">\\n        End Date is lesser than start date\\n      </div>\\n    </mat-form-field>\\n    <div>\\n      <label style=\\\"color:rgba(0, 0, 0, 0.53);\\\">Priority</label>\\n      <mat-slider placeholder=\\\"Priority\\\" style=\\\"width:90%;\\\" [max]=\\\"30\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [tickInterval]=\\\"1\\\"\\n        [vertical]=\\\"false\\\" [(ngModel)]=\\\"creatingProjectForm.Priority\\\" name=\\\"Priority\\\">\\n      </mat-slider>\\n      <span class=\\\"text-small\\\">30</span>\\n    </div>\\n    <mat-form-field class=\\\"example-full-width col-md-9\\\">\\n      <input matInput placeholder=\\\"Manager\\\" [disabled]=\\\"true\\\" name=\\\"ManagerName\\\" [(ngModel)]=\\\"creatingProjectForm.ManagerName\\\"\\n        value=\\\"{{SelectedManagerName}}\\\" />\\n      <input type=\\\"hidden\\\" [(ngModel)]=\\\"creatingProjectForm.UserId\\\" name=\\\"UserId\\\"  />\\n    </mat-form-field>\\n    <button type=\\\"button\\\" mat-button mat-raised-button (click)=\\\"openDialog()\\\" class=\\\"mr-2\\\" value=\\\"creatingProjectForm.Project_Id\\\"\\n      color=\\\"primary\\\">\\n      <mat-icon>{{'search'}}</mat-icon>\\n    </button>\\n\\n    <div *ngIf=\\\"creatingProjectForm.IsCreate;then contentCreateProject else contentUpdateProject\\\" color=\\\"primary\\\">\\n    </div>\\n  </form>\\n</div>\\n<hr/>\\n<div class=\\\"col-md-8 offset-md-2 mt-4\\\">\\n  <mat-form-field class=\\\"col-md-3\\\">\\n    <input matInput placeholder=\\\"Search\\\" name=\\\"projectSearchValue\\\" [(ngModel)]=\\\"projectSearchValue\\\">\\n  </mat-form-field>\\n  <label>Sort By</label>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2 ml-2\\\" value=\\\"\\\" (click)=\\\"sort('StartDate')\\\" color=\\\"primary\\\">\\n    StartDate</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('EndDate')\\\" color=\\\"primary\\\">\\n    EndDate</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('Priority')\\\" color=\\\"primary\\\">\\n    Priority</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('Completed')\\\" color=\\\"primary\\\">\\n    Completed</button>\\n</div>\\n<div class=\\\"col-md-8 offset-md-2 mt-4\\\">\\n  <ul class=\\\"list-group list-group-flush\\\">\\n    <li *ngFor=\\\"let projectitem of projectDataSource | FilterPipe: projectSearchValue; let i=index\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col col-md-8\\\">\\n          <p><strong>Project: </strong> {{ projectitem.ProjectName }} </p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col col-md-6\\\">\\n              <p><strong>No of Tasks: </strong><span class=\\\"badge badge-info\\\"> {{ projectitem.TotalTaskCount }}</span></p>\\n              <p><strong>Start Date: </strong> {{ projectitem.Start_Date| date: 'dd/MM/yyyy' }}</p>\\n            </div>\\n            <div class=\\\"col col-md-6\\\">\\n              <p>\\n                <strong>Completed: </strong>\\n                <span class=\\\"badge badge-info\\\">{{ projectitem.CompletedTaskCount }}</span>\\n              </p>\\n              <p> <strong>End Date: </strong> {{ projectitem.End_Date | date: 'dd/MM/yyyy'}}</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col col-md-2\\\">\\n          <p> <strong>Priority: </strong>\\n            <span class=\\\"badge badge-info\\\">{{ projectitem.Priority }}</span></p>\\n        </div>\\n        <div class=\\\"col col-md-2\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col col-12\\\">\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editProject(projectitem,projectitem.lstUsers[0])\\\">\\n                <mat-icon>create</mat-icon> Update</button>\\n              <br/>\\n              <br/>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteProject(projectitem)\\\">\\n                <mat-icon item-width=\\\"20px\\\">delete</mat-icon> Suspend</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </li>\\n\\n    <li *ngIf=\\\"(projectDataSource| FilterPipe:projectSearchValue).length==0\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"alert alert-info\\\">\\n        There are no items to display.\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { UserServiceService } from '../user-service.service';\nimport { ProjectServiceService } from '../project-service.service';\nimport { User } from '../User';\nimport { Project } from '../Project';\nimport { UserDialogData } from '../UserDialogData';\nimport { UserSearchComponent } from '../user-search/user-search.component';\n\n\n@Component({\n  selector: 'app-project-manager',\n  templateUrl: './project-manager.component.html',\n  styleUrls: ['./project-manager.component.css']\n})\nexport class ProjectManagerComponent implements OnInit {\n\n  constructor(private projectService: ProjectServiceService, private userService: UserServiceService,\n    public dialog: MatDialog) {\n\n  }\n\n  creatingProjectForm: Project;\n  projectDataSource: Project[] = [];\n  projectSearchValue: string;\n  projectSortElement: string;\n  disabled: boolean = false;\n  dialogDataSelected: User;\n  SelectedManagerName: string;\n  isProjectEndDateLess: boolean = false;\n  \n  projStartDateSort: boolean = true;\n  projEndDateSort: boolean = true;\n  projPrioritySort: boolean = true;\n  projCompletedSort: boolean = true;\n\n\n  ngOnInit() {\n    console.log(\"ngOnInit\");\n    this.creatingProjectForm = new Project();\n    this.creatingProjectForm.IsCreate = true;\n    this.projectService.getprojects().subscribe(a => this.projectDataSource = a);\n    this.projectSortElement = 'ProjectName';\n    this.disabled = false;\n    console.log(this.projectDataSource);\n  }\n\n  cancelUpdateProject() {\n    this.creatingProjectForm = new Project();\n    this.creatingProjectForm.IsCreate = true;\n    this.disabled = false;\n  }\n  onSetDateChange(event) {\n    console.log(event.checked);\n    if (event.checked) {\n      console.log(new Date());\n      console.log(new Date().setDate(new Date().getDate() + 1));\n      //this.selectedStartDate = new Date();\n      this.creatingProjectForm.StartDate = new Date();\n      let enddate = new Date();\n      enddate.setDate(enddate.getDate() + 1);\n      this.creatingProjectForm.EndDate = enddate;\n    }\n    else {\n      this.creatingProjectForm.StartDate = null;\n      this.creatingProjectForm.EndDate = null;\n    }\n  }\n\n  OnProjectFormSubmit(creatingProjectForm: NgForm) {\n    console.log(creatingProjectForm.value);\n    this.CompareDates();\n    if (creatingProjectForm.valid && !this.isProjectEndDateLess) {\n      this.isProjectEndDateLess = false;\n      let localProject: Project = new Project();\n      localProject = creatingProjectForm.value;\n\n      if (localProject.Project_ID != undefined && localProject.Project_ID > 0) {\n        this.projectService.updateprojects(creatingProjectForm.value, localProject.Project_ID).subscribe(g => this.projectService.getprojects().subscribe(a => this.projectDataSource = a));\n        this.creatingProjectForm = new Project();\n        this.creatingProjectForm.IsCreate = true;\n        console.log(\"project updated\");\n        creatingProjectForm.resetForm();\n        this.disabled = false;\n      }\n      else {\n        this.projectService.addprojects(creatingProjectForm.value).subscribe(g => this.projectService.getprojects().subscribe(a => this.projectDataSource = a));\n        this.creatingProjectForm = new Project();\n        this.creatingProjectForm.IsCreate = true;\n        console.log(\"project added\");\n        creatingProjectForm.resetForm();\n        this.disabled = false;\n      }\n    }\n  }\n\n  sort(sortElement: string) {\n    console.log('calling sort' + sortElement);\n    this.projectSortElement = sortElement;\n    if (sortElement == 'StartDate') {\n      if (this.projStartDateSort) {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => this.getTime(a.StartDate) - this.getTime(b.StartDate));\n      }\n      else {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => this.getTime(a.StartDate) - this.getTime(b.StartDate)).reverse();\n      }\n      this.projStartDateSort = !this.projStartDateSort;\n    }\n    else if (sortElement == 'EndDate') {\n      if (this.projEndDateSort) {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => this.getTime(a.EndDate) - this.getTime(b.EndDate));\n      }\n      else {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => this.getTime(a.EndDate) - this.getTime(b.EndDate)).reverse();\n      }\n      this.projEndDateSort = !this.projEndDateSort;\n\n    }\n    else if (sortElement == 'Priority') {\n      if (this.projPrioritySort) {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => a.Priority - b.Priority);\n      }\n      else {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => a.Priority - b.Priority).reverse();\n      }\n      this.projPrioritySort = !this.projPrioritySort;\n    }\n    else {\n      if (this.projCompletedSort) {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => a.CompletedTaskCount - b.CompletedTaskCount);\n      }\n      else {\n        this.projectDataSource = this.projectDataSource.sort((a, b) => a.CompletedTaskCount - b.CompletedTaskCount).reverse();\n      }\n      this.projCompletedSort = !this.projCompletedSort;\n    }\n  }\n\n  private getTime(date?: Date) {\n    return date != null ? new Date(date).getTime() : 0;\n  }\n\n  editProject(project: Project, user: User) {\n    // this.createUserForm = new User();\n    console.log(user);\n    let localProject: Project = new Project();\n    localProject.Project_ID = project.Project_ID;\n    localProject.IsCreate = false;\n    localProject.EndDate = project.EndDate;\n    localProject.StartDate = project.StartDate;\n    localProject.Userid = project.Userid;\n    localProject.Priority = project.Priority;\n    localProject.ProjectName = project.ProjectName;\n    if (user != undefined && user != null) {\n      localProject.ManagerName = user.FirstName + \" \" + user.LastName;\n      localProject.Userid = user.User_id;\n    }\n    if (localProject.StartDate != null && localProject.StartDate != undefined) {\n      this.disabled = true;\n    }\n    console.log(localProject);\n    this.creatingProjectForm = localProject;\n\n\n  }\n\n  CompareDates(): void {\n    console.log(this.creatingProjectForm.StartDate);\n    console.log(this.creatingProjectForm.EndDate);\n    if (this.creatingProjectForm.StartDate != null && this.creatingProjectForm.EndDate != null) {\n      if (new Date(this.creatingProjectForm.EndDate) < new Date(this.creatingProjectForm.StartDate)) {\n        console.log('isEndDateLess');\n        this.isProjectEndDateLess = true;\n      }\n      else\n        this.isProjectEndDateLess = false;\n\n    }\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UserSearchComponent, {\n      width: '400px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      this.dialogDataSelected = result;\n      this.SelectedManagerName = this.dialogDataSelected.FirstName + \" \" + this.dialogDataSelected.LastName;\n      this.creatingProjectForm.Userid = this.dialogDataSelected.User_id;\n    });\n  }\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 250px;\\r\\n    font-family: 'Courier New', Courier, monospace !important;\\r\\n  }\\r\\n  \\r\\n  .example-header {\\r\\n    min-height: 54px;\\r\\n    padding: 8px 20px 0;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 12px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 450px;\\r\\n  }\\r\\n  \\r\\n  .customMatError{\\r\\n    position: absolute;\\r\\n    top:30px;\\r\\n    font-size: 10px;\\r\\n    color: coral;\\r\\n}\"","module.exports = \"<div class=\\\"example-container\\\">\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter Projects\\\">\\n    </mat-form-field>\\n    <mat-table #table [dataSource]=\\\"dataSourceProject\\\">\\n\\n      <ng-container matColumnDef=\\\"Project_Id\\\">\\n        <mat-header-cell *matHeaderCellDef> Project_Id </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let Project\\\"> {{ParentTask.Project_Id}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"ProjectName\\\">\\n        <mat-header-cell *matHeaderCellDef> ProjectName </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let Project\\\"> {{ParentTask.ProjectName}} </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let Project\\\">\\n          <div>\\n            <button mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"ParentTask.Project_Id\\\" [mat-dialog-close]=\\\"Project\\\" color=\\\"primary\\\">\\n              Select</button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5]\\\" showFirstLastButtons></mat-paginator>\\n  </mat-dialog-content>\\n</div>\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange, MatPaginator, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ProjectServiceService } from '../project-service.service';\nimport { ProjectDialogData } from '../ProjectDialogData';\nimport {Project} from '../Project';\n@Component({\n  selector: 'app-project-search',\n  templateUrl: './project-search.component.html',\n  styleUrls: ['./project-search.component.css']\n})\nexport class ProjectSearchComponent implements OnInit {\n\n  constructor(private projectService: ProjectServiceService, public dialogRef: MatDialogRef<ProjectSearchComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProjectDialogData) { }\n    displayedColumns = ['Project_Id', 'ProjectName', 'Action'];\n    dataSourceProject: MatTableDataSource<Project>;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    ngOnInit() {\n      this.projectService.getprojects().subscribe(a => this.setData(a));\n    }\n    applyFilter(filterValue: string) {\n      this.dataSourceProject.filter = filterValue.trim().toLowerCase();\n    }\n    setData(data: any) {\n      this.dataSourceProject = new MatTableDataSource(data);\n      this.dataSourceProject.paginator = this.paginator;\n    }\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {observable,of, Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError,map,tap} from 'rxjs/operators';\nimport {Project} from './Project';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({'content-Type':'application/json'})\n  };\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectServiceService {\n\n  private ProjectUrl = 'http://localhost/ProjectManagerAPI/api/Project';\n  private ProjectByProjectidUrl = 'http://localhost/ProjectManagerAPI/api/Project/';\n  private CreateProjectUrl = 'http://localhost/ProjectManagerAPI/api/Project';\n  private DeleteProjectUrl = 'http://localhost/ProjectManagerAPI/api/Project/';\n  private UpdateProjectUrl = 'http://localhost/ProjectManagerAPI/api/Project/';\n\n  constructor(private http: HttpClient) { }\n\n  private handleError<T>(operation = 'operation',result?:T){\n    return (error:any): Observable<T>=>{\n      console.error(error);\n      console.log('${operation} failed:${error.message}');\n      return of(result as T);\n    };\n  }\n\n  getprojects():Observable<Project[]>{\n        console.log('Invoking GetProject................');\n    return this.http.get<Project[]>(this.ProjectUrl).pipe(\n      catchError(this.handleError('getProject',[]))\n    );\n  }\n\n  addprojects(project: Project):Observable<any>{\n    console.log('Invoking AddProject................');\n   return this.http.post<boolean>(this.CreateProjectUrl,project).pipe(\n  catchError(this.handleError('addProject',[]))\n  );\n}\nupdateprojects(project: Project,project_id:number):Observable<any>{\n  console.log('Invoking UpdateProject................');\n return this.http.put<boolean>(this.UpdateProjectUrl + project_id,project).pipe(\ncatchError(this.handleError('UpdateProject',[]))\n);\n}\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 250px;\\r\\n    font-family: 'Courier New', Courier, monospace !important;\\r\\n  }\\r\\n  \\r\\n  .example-header {\\r\\n    min-height: 54px;\\r\\n    padding: 8px 20px 0;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 12px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 450px;\\r\\n  }\\r\\n  \\r\\n  .customMatError{\\r\\n    position: absolute;\\r\\n    top:30px;\\r\\n    font-size: 10px;\\r\\n    color: coral;\\r\\n}\\r\\n  \\r\\n  .mat-cell:nth-child(5),\\r\\n.mat-header-cell:nth-child(5)\\r\\n{\\r\\n    flex: 0 0 9%\\r\\n}\\r\\n  \\r\\n  .mat-cell:nth-child(6),\\r\\n.mat-header-cell:nth-child(6)\\r\\n{\\r\\n    flex: 0 0 9%\\r\\n}\\r\\n  \\r\\n  .mat-cell:nth-child(7),\\r\\n.mat-header-cell:nth-child(7)\\r\\n{\\r\\n    flex: 0 0 9%\\r\\n}\\r\\n  \\r\\n  .mat-elevation-z2\\r\\n{\\r\\n    box-shadow: none !important;\\r\\n    padding-top: 20px; \\r\\n}\\r\\n  \\r\\n  .mat-tab-label-active\\r\\n{\\r\\nbackground-color: rgb(red, green, blue)!important\\r\\n}\\r\\n  \\r\\n  .mat-header-row\\r\\n{\\r\\n    background-color: rgb(yellow, Purple, ORange)!important\\r\\n}\\r\\n  \\r\\n  .fontFamily{\\r\\n    font-family: 'Courier New', Courier, monospace !important\\r\\n}\\r\\n  \\r\\n  .mat-row:nth-child(odd)\\r\\n{\\r\\n    background-color: rgb(Pink, red, yellow)!important\\r\\n}\\r\\n  \\r\\n  .mat-header-cell{\\r\\n    font-size: 13p;\\r\\n    color: chartreuse;\\r\\n    font-weight: bold;\\r\\n}\\r\\n  \\r\\n  .example-small-box,\\r\\n.example-large-box\\r\\n{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin: 13px;\\r\\n    padding: 13px;\\r\\n    border-radius: 7cm;\\r\\n}\\r\\n  \\r\\n  .exampl-small-box{\\r\\n    height: 95px;\\r\\n    width: 95px\\r\\n}\\r\\n  \\r\\n  .exampl-large-box{\\r\\n    height: 295px;\\r\\n    width: 295px\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<ng-template #content>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"createTask.TaskId\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Add Task</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"createTask.TaskId\\\" (click)=\\\"Reset();CreateTask.resetForm()\\\" color=\\\"accent\\\">\\n    <mat-icon>{{'clear'}}</mat-icon>Reset</button>\\n</ng-template>\\n<ng-template #other_content>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"createTask.TaskId\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Update Task</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"createTask.TaskId\\\" (click)=\\\"Reset();CreateTask.resetForm()\\\" color=\\\"warn\\\">\\n    <mat-icon>{{'cancel'}}</mat-icon>Cancel</button>\\n</ng-template>\\n<div class=\\\"example-container\\\">\\n  <mat-tab-group class=\\\"\\\" [(selectedIndex)]=\\\"selectedTab\\\" (selectedTabChange)=\\\"onTabClick($event)\\\">\\n    <mat-tab label=\\\"Add Project\\\">\\n      <app-project-manager></app-project-manager>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Add Task\\\">\\n      <div class=\\\"col-md-4 offset-md-4 mt-4\\\">\\n        <form #CreateTask=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(CreateTask)\\\">\\n          <mat-form-field class=\\\"example-full-width col-md-9 pl-0\\\">\\n            <input required matInput #ProjectName=\\\"ngModel\\\" placeholder=\\\"Project\\\" [disabled]=\\\"true\\\" name=\\\"ProjectName\\\" [(ngModel)]=\\\"createTask.ProjectName\\\"\\n              value=\\\"{{SelectedProjectName}}\\\" />\\n            <input type=\\\"hidden\\\" [(ngModel)]=\\\"createTask.Project_Id\\\" name=\\\"Project_Id\\\" />\\n            <div class=\\\"customMatError\\\" *ngIf=\\\"isProjectEmpty\\\">\\n              Project is\\n              <strong>required</strong>\\n            </div>\\n          </mat-form-field>\\n          <button [disabled]=\\\"!createTask.IsCreate\\\" type=\\\"button\\\" mat-button mat-raised-button (click)=\\\"openProjectDialog()\\\" class=\\\"mr-2\\\" value=\\\"createTask.Project_Id\\\"\\n            color=\\\"primary\\\">\\n            <mat-icon>{{'search'}}</mat-icon>\\n          </button>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input required matInput #Task=\\\"ngModel\\\" placeholder=\\\"Task Name\\\" name=\\\"Task\\\" [(ngModel)]=\\\"createTask.Task\\\">\\n            <input type=\\\"hidden\\\" [(ngModel)]=\\\"createTask.TaskId\\\" name=\\\"TaskId\\\">\\n            <mat-error>\\n              Task Name is\\n              <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <div class=\\\"example-full-width\\\">\\n            <mat-checkbox [disabled]=\\\"!(createTask.IsCreate)\\\" (change)=\\\"onSetParentChange($event)\\\" [(ngModel)]=\\\"createTask.IsParentTask\\\" name=\\\"IsParentTask\\\">Parent Task</mat-checkbox>\\n          </div>\\n          <div>\\n            <label style=\\\"color:rgba(0, 0, 0, 0.53);\\\">Priority</label>\\n            <mat-slider [disabled]=\\\"createTask.IsParentTask\\\" placeholder=\\\"Priority\\\" style=\\\"width:90%;\\\" [max]=\\\"30\\\" [min]=\\\"0\\\" [step]=\\\"1\\\"\\n              [thumbLabel]=\\\"true\\\" [tickInterval]=\\\"1\\\" [vertical]=\\\"false\\\" [(ngModel)]=\\\"createTask.Priority\\\" name=\\\"Priority\\\">\\n            </mat-slider>\\n            <span class=\\\"text-small\\\">30</span>\\n          </div>\\n          <mat-form-field class=\\\"example-full-width col-md-9 pl-0\\\">\\n            <input matInput placeholder=\\\"Parent Task\\\" [disabled]=\\\"true\\\" name=\\\"ParentTaskName\\\" [(ngModel)]=\\\"createTask.ParentTaskName\\\"\\n              value=\\\"{{SelectedParentName}}\\\" />\\n            <input type=\\\"hidden\\\" [(ngModel)]=\\\"createTask.Parent_Id\\\" name=\\\"Parent_Id\\\" />\\n          </mat-form-field>\\n          <button [disabled]=\\\"createTask.IsParentTask\\\" type=\\\"button\\\" mat-button mat-raised-button (click)=\\\"openParentDialog()\\\" class=\\\"mr-2\\\"\\n            value=\\\"createTask.Parent_Id\\\" color=\\\"primary\\\">\\n            <mat-icon>{{'search'}}</mat-icon>\\n          </button>\\n          <div>\\n            <mat-form-field class=\\\"example-full-width col-md-6 pl-0\\\">\\n              <input (dateChange)=\\\"CompareDate()\\\" [disabled]=\\\"createTask.IsParentTask\\\" matInput [matDatepicker]=\\\"picker2\\\" name=\\\"StartDate\\\"\\n                placeholder=\\\"Start Date\\\" [(ngModel)]=\\\"createTask.StartDate\\\" />\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker2></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width col-md-6\\\">\\n              <input (dateChange)=\\\"CompareDate()\\\" [disabled]=\\\"createTask.IsParentTask\\\" matInput [matDatepicker]=\\\"picker3\\\" name=\\\"EndDate\\\"\\n                placeholder=\\\"End Date\\\" [(ngModel)]=\\\"createTask.EndDate\\\" />\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker3></mat-datepicker>\\n              <div class=\\\"customMatError mat-form-field-subscript-wrapper\\\" *ngIf=\\\"isEndDateLess\\\">\\n                End Date is lesser than start date\\n              </div>\\n            </mat-form-field>\\n          </div>\\n          <mat-form-field class=\\\"example-full-width col-md-9 pl-0\\\">\\n            <input matInput placeholder=\\\"User\\\" [disabled]=\\\"true\\\" name=\\\"TaskUserName\\\" [(ngModel)]=\\\"createTask.TaskUserName\\\"\\n              value=\\\"{{SelectedUserName}}\\\" />\\n            <input type=\\\"hidden\\\" [(ngModel)]=\\\"createTask.UserId\\\" name=\\\"UserId\\\" />\\n          </mat-form-field>\\n          <button [disabled]=\\\"createTask.IsParentTask || !(createTask.IsCreate)\\\" type=\\\"button\\\" mat-button mat-raised-button (click)=\\\"openUserDialog()\\\" class=\\\"mr-2\\\"\\n            value=\\\"createTask.UserId\\\" color=\\\"primary\\\">\\n            <mat-icon>{{'search'}}</mat-icon>\\n          </button>\\n          <div *ngIf=\\\"createTask.IsCreate;then content else other_content\\\" color=\\\"primary\\\">\\n          </div>\\n        </form>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"View Task\\\">\\n\\n      <div class=\\\"col mt-3\\\">\\n        <mat-form-field class=\\\"example-full-width col-md-4 pl-0\\\">\\n          <input matInput placeholder=\\\"Project\\\" [disabled]=\\\"true\\\" name=\\\"CustomSearch\\\" [(ngModel)]=\\\"CustomSearch\\\" value=\\\"{{SelectedProjectName}}\\\"\\n          />\\n        </mat-form-field>\\n        <button type=\\\"button\\\" mat-button mat-raised-button (click)=\\\"openProjectDialog()\\\" class=\\\"mr-2\\\" color=\\\"primary\\\">\\n          <mat-icon>{{'search'}}</mat-icon>\\n        </button>\\n        <label>Sort By</label>\\n        <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2 ml-2\\\" value=\\\"\\\" (click)=\\\"sort('StartDate')\\\" color=\\\"primary\\\">\\n          Start Date</button>\\n        <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('EndDate')\\\" color=\\\"primary\\\">\\n          End Date</button>\\n        <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('Priority')\\\" color=\\\"primary\\\">\\n          Priority</button>\\n        <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('Completed')\\\" color=\\\"primary\\\">\\n          Completed</button>\\n      </div>\\n\\n      <div class=\\\"col-md-12 mt-4\\\">\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li *ngFor=\\\"let taskitem of TaskListSource | FilterPipe: CustomSearch; let i=index\\\" class=\\\"list-group-item\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"row col-md-8\\\">\\n               <div class=\\\"col-md-2\\\">\\n                  <strong> Task</strong>\\n                  <br/> {{ taskitem.Task }} </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <strong> Parent</strong>\\n                  <br/> {{ taskitem.ParentDTOName }}</div>\\n                <div class=\\\"col-md-2\\\">\\n                  <strong> Priority</strong>\\n                  <br/> {{ taskitem.Priority }}</div>\\n                <div class=\\\"col-md-2\\\">\\n                  <strong> Start</strong>\\n                  <br/> {{ taskitem.StartDate| date: 'dd/MM/yyyy' }}</div>\\n                <div class=\\\"col-md-2\\\">\\n                  <strong> End</strong>\\n                  <br/> {{ taskitem.EndDate| date: 'dd/MM/yyyy' }}</div>\\n              </div>\\n              <div class=\\\"col col-md-4\\\">\\n                <div class=\\\"row\\\" *ngIf=\\\"!taskitem.IsTaskEnded\\\">\\n                  <button mat-raised-button color=\\\"primary\\\" class=\\\"col-md-3\\\" (click)=\\\"editTask(taskitem,taskitem.ParentTask,taskitem.Project,taskitem.Users)\\\">\\n                    <mat-icon>edit</mat-icon> Edit</button>\\n                  <button mat-raised-button color=\\\"warn\\\" class=\\\"col-md-4 ml-1\\\" (click)=\\\"endTask(taskitem.TaskId)\\\">\\n                    <mat-icon item-width=\\\"15px\\\">cancel</mat-icon> End Task</button>\\n                </div>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li *ngIf=\\\"(TaskListSource | FilterPipe:CustomSearch).length==0\\\" class=\\\"list-group-item\\\">\\n            <div class=\\\"alert alert-info\\\">\\n              There are no items to display.\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"Add User\\\">\\n      <app-user-manager></app-user-manager>\\n    </mat-tab>\\n  </mat-tab-group>\\n</div>\\n\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Task, SearchTask, ParentTask } from '../Task';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from '../ErrorStateMatcher';\nimport { TaskServiceService } from '../task-service.service';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { ProjectSearchComponent } from '../project-search/project-search.component';\nimport { Project } from '../Project';\nimport { ParenttaskSearchComponent } from '../parenttask-search/parenttask-search.component';\nimport { UserSearchComponent } from '../user-search/user-search.component';\nimport { User } from '../User';\nimport { UserManagerComponent } from '../user-manager/user-manager.component';\nimport { ProjectManagerComponent } from '../project-manager/project-manager.component';\n\n@Component({\n  selector: 'app-task-manager-home',\n  templateUrl: './task-manager-home.component.html',\n  styleUrls: ['./task-manager-home.component.css']\n})\nexport class TaskManagerHomeComponent implements OnInit {\n  testData: Task[];\n  @ViewChild(UserManagerComponent) userManagerComp: UserManagerComponent;\n  @ViewChild(ProjectManagerComponent) projManagerComp: ProjectManagerComponent;\n  constructor(private taskService: TaskServiceService, public dialog: MatDialog) {\n\n    this.createTask = new Task();\n    this.createTask.IsCreate = true;\n    this.selectedTab = 0;\n    this.searchTask = new SearchTask();\n\n  }\n  ngAfterViewInit() {\n    this.userManagerComp.createUserForm = new User();\n    this.userManagerComp.createUserForm.IsCreate = true;\n    this.projManagerComp.creatingProjectForm = new Project();\n    this.projManagerComp.creatingProjectForm.IsCreate = true;\n  }\n  displayedColumns = ['Task', 'ParentTask', 'Priority', 'Start Date', 'End Date', 'Action'];\n  //dataSource: MatTableDataSource<Task>;\n  createTask: Task;\n  selectedTab: number;\n  searchTask: SearchTask;\n  //parentTasks: ParentTask[];\n  SelectedProjectName: string;\n  projectDialogDataSelected: Project;\n  SelectedParentName: string;\n  parentDialogSelectedData: ParentTask;\n  SelectedUserName: string;\n  userDialogSelectedData: User;\n  isProjectEmpty: boolean = false;\n  isEndDateLess: boolean = false;\n  CustomSearch: string;\n  TaskListSource: Task[] = [];\n\n  \n  taskStartDateSort: boolean = true;\n  taskEndDateSort: boolean = true;\n  taskPrioritySort: boolean = true;\n  taskCompletedSort: boolean = true;\n\n  TaskFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  PriorityFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  StartFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  EndFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  matcher = new MyErrorStateMatcher();\n  ngOnInit() {\n    //this.taskService.getParents().subscribe(a => this.parentTasks = a);\n    this.taskService.getTasks().subscribe(a => this.setData(a));\n  }\n\n  sort(sortElement: string) {\n    console.log('calling sort' + sortElement);\n    //this.projectSortElement = sortElement;\n    if (sortElement == 'StartDate') {\n      if (this.taskStartDateSort) {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => this.getTime(a.StartDate) - this.getTime(b.StartDate));\n      }\n      else {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => this.getTime(a.StartDate) - this.getTime(b.StartDate)).reverse();\n      }\n      this.taskStartDateSort = !this.taskStartDateSort;\n    }\n    else if (sortElement == 'EndDate') {\n      if (this.taskEndDateSort) {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => this.getTime(a.EndDate) - this.getTime(b.EndDate));\n      }\n      else {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => this.getTime(a.EndDate) - this.getTime(b.EndDate)).reverse();\n      }\n      this.taskEndDateSort = !this.taskEndDateSort;\n    }\n    else if (sortElement == 'Priority') {\n      if (this.taskPrioritySort) {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => a.Priority - b.Priority);\n      }\n      else {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => a.Priority - b.Priority).reverse();\n      }\n      this.taskPrioritySort = !this.taskPrioritySort;\n    }\n    else {\n      if (this.taskCompletedSort) {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => a.Status.toLocaleString().localeCompare(b.Status.toLocaleString()));\n      }\n      else {\n        this.TaskListSource = this.TaskListSource.sort((a, b) => a.Status.toLocaleString().localeCompare(b.Status.toLocaleString())).reverse();\n      }\n      this.taskCompletedSort = !this.taskCompletedSort;\n    }\n  }\n\n  private getTime(date?: Date) {\n    return date != null ? new Date(date).getTime() : 0;\n  }\n  setData(a: any) {\n    this.TaskListSource = a;\n\n  }\n\n  editTask(task: Task, parent: ParentTask, project: Project, users: User[]) {\n    this.selectedTab = 1;\n    //this.taskService.getTasksById(taskId).subscribe(a => this.createTask = a);\n    this.createTask.IsCreate = false;\n    console.log('task');\n    console.log(task);\n    console.log('taparentsk');\n    console.log(parent);\n    console.log('Project');\n    console.log(project);\n    console.log('users');\n    console.log(users);\n    let localTask: Task = new Task();\n    localTask.TaskId = task.TaskId;\n    localTask.IsCreate = false;\n    localTask.EndDate = task.EndDate;\n    localTask.StartDate = task.StartDate;\n    localTask.Task = task.Task;\n    localTask.Priority = task.Priority;\n    localTask.Status = task.Status;\n    if (parent != undefined && parent != null) {\n      localTask.ParentTaskName = parent.Parent_Task;\n      localTask.Parent_Id = parent.Parent_Id;\n    }\n    if (project != undefined && project != null) {\n      localTask.ProjectName = project.ProjectName;\n      localTask.Project_Id = project.Project_ID;\n    }\n    if (users != undefined && users != null && users.length > 0) {\n      if (users[0] != undefined && users[0] != null) {\n        localTask.Userid = users[0].User_id;\n        localTask.TaskUserName = users[0].FirstName + \" \" + users[0].LastName;\n      }\n    }\n    console.log(localTask);\n    this.createTask = localTask;\n  }\n\n  endTask(taskId: number) {\n    this.taskService.endTaskbyID(taskId).subscribe(g => this.taskService.getTasks().subscribe(a => this.setData(a)));\n  }\n\n  Reset() {\n    this.createTask = new Task();\n    this.createTask.IsCreate = true;\n    this.searchTask = new SearchTask();\n    this.isProjectEmpty = false;\n    this.isEndDateLess = false;\n  }\n\n  onTabClick(event: MatTabChangeEvent) {\n    console.log('event => ', event);\n    console.log('index => ', event.index);\n    console.log('tab name=> ', event.tab.textLabel);\n    this.userManagerComp.createUserForm = new User();\n    this.userManagerComp.createUserForm.IsCreate = true;\n    this.projManagerComp.creatingProjectForm = new Project();\n    this.projManagerComp.creatingProjectForm.IsCreate = true;\n    this.CustomSearch = '';\n    if (event.index == 2) {\n      this.createTask = new Task();\n      this.createTask.IsCreate = true;\n      this.taskService.getTasks().subscribe(a => this.setData(a));\n      this.searchTask = new SearchTask();\n      this.isEndDateLess = false;\n      this.isProjectEmpty = false;\n    }\n  }\n\n  onSubmit(CreateTask: NgForm) {\n    console.log(CreateTask.value);\n    this.CompareDate();\n    let localTask: Task = new Task();\n    localTask = CreateTask.value;\n    if (CreateTask.valid) {\n      if (localTask.Project_Id == null || localTask.Project_Id == undefined) {\n        this.isProjectEmpty = true;\n      }\n      else if (!this.isEndDateLess) {\n        this.isProjectEmpty = false;\n        this.isEndDateLess = false;\n        if (localTask.TaskId != undefined && localTask.TaskId > 0) {\n          this.taskService.updateTaskbyID(CreateTask.value, localTask.TaskId).subscribe(g => this.taskService.getTasks().subscribe(a => this.setData(a)));\n          this.selectedTab = 2;\n          this.createTask = new Task();\n          this.searchTask = new SearchTask();\n          this.createTask.IsCreate = true;\n          CreateTask.resetForm()\n        }\n        else {\n          this.taskService.addTaskby(CreateTask.value).subscribe(g => this.taskService.getTasks().subscribe(a => this.setData(a)));\n          this.selectedTab = 2;\n          this.createTask = new Task();\n          this.searchTask = new SearchTask();\n          this.createTask.IsCreate = true;\n          CreateTask.resetForm()\n        }\n\n\n      }\n    }\n  }\n\n  openProjectDialog(): void {\n    const dialogRef = this.dialog.open(ProjectSearchComponent, {\n      width: '400px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if (result != null && result != undefined) {\n        this.isProjectEmpty = false;\n      }\n      this.projectDialogDataSelected = result;\n      this.SelectedProjectName = this.projectDialogDataSelected.ProjectName;\n      this.createTask.Project_Id = this.projectDialogDataSelected.Project_ID;\n      this.CustomSearch = this.projectDialogDataSelected.ProjectName;\n    });\n  }\n\n\n  openParentDialog(): void {\n    const dialogRef = this.dialog.open(ParenttaskSearchComponent, {\n      width: '400px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog ParenttaskSearchComponent was closed');\n      console.log(result);\n      this.parentDialogSelectedData = result;\n      this.SelectedParentName = this.parentDialogSelectedData.Parent_Task;\n      this.createTask.Parent_Id = this.parentDialogSelectedData.Parent_Id;\n    });\n  }\n\n  openUserDialog(): void {\n    const dialogRef = this.dialog.open(UserSearchComponent, {\n      width: '400px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog UserSearchComponent was closed');\n      console.log(result);\n      this.userDialogSelectedData = result;\n      this.SelectedUserName = this.userDialogSelectedData.FirstName + \" \" + this.userDialogSelectedData.LastName;\n      this.createTask.Userid = this.userDialogSelectedData.User_id;\n    });\n  }\n  onSetParentChange(event): void {\n    this.createTask.Priority = 0;\n    this.createTask.Parent_Id = null;\n    this.createTask.ParentTaskName = null;\n    this.createTask.StartDate = null;\n    this.createTask.EndDate = null;\n    this.createTask.Userid = null;\n    this.createTask.TaskUserName = null;\n  }\n\n  CompareDate(): void {\n    console.log(this.createTask.StartDate);\n    console.log(this.createTask.EndDate);\n    if (this.createTask.StartDate != null && this.createTask.EndDate != null) {\n      if (new Date(this.createTask.EndDate) < new Date(this.createTask.StartDate)) {\n        console.log('isEndDateLess');\n        this.isEndDateLess = true;\n      }\n      else\n        this.isEndDateLess = false;\n\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {observable,of, Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError,map,tap} from 'rxjs/operators';\nimport {Task, ParentTask} from './Task';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'content-Type':'application/json'})\n  };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n  testData:Task[]\n\n  private taskUrl = 'http://localhost/ProjectManagerAPI/api/task/getAll';\n  private taskbyIdUrl = 'http://localhost/ProjectManagerAPI/task/get/';\n  private taskCreateUrl = 'http://localhost/ProjectManagerAPI/task/create';\n  private taskendUrl = 'http://localhost/ProjectManagerAPI/task/end/';\n  private taskUpdateUrl = 'http://localhost/ProjectManagerAPI/task/update/';\n  private parenttaskUrl = 'http://localhost/ProjectManagerAPI/task/getParents';\n\n  constructor(private http: HttpClient) { }\n\n  private handleError<T>(operation = 'operation',result?:T){\n    return (error:any): Observable<T>=>{\n      console.error(error);\n      console.log('${operation} failed:${error.message}');\n      return of(result as T);\n    };\n  }\n\n  \n  getParents():Observable<ParentTask[]>{\n   return this.http.get<ParentTask[]>(this.parenttaskUrl);\n}\n\n\ngetTasks():Observable<Task[]>{\n  console.log('Invoking Gettask................');\nreturn this.http.get<Task[]>(this.taskUrl).pipe(\ncatchError(this.handleError('getTask',[]))\n);\n}\n\n\ngetTaskbyID(task_id: number):Observable<Task[]>{\n  console.log('Invoking Gettaskbyid................');\nreturn this.http.get<Task[]>(this.taskbyIdUrl + task_id);\n}\n\n\n\nendTaskbyID(task_id: number):Observable<any>{\n  console.log('Invoking endtaskbyid................'+task_id);\nreturn this.http.get(this.taskendUrl + task_id);\n}\n\nupdateTaskbyID(task:Task,task_id: number):Observable<any>{\n  console.log('Invoking updatetask................' +  task);  \nreturn this.http.post(this.taskUpdateUrl + task_id,task);\n}\n\n\naddTaskby(task:Task):Observable<any>{\n  console.log('Invoking createtask................' +  task);\n  return this.http.post(this.taskCreateUrl,task);\n}\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 250px;\\r\\n    font-family: 'Courier New', Courier, monospace !important;\\r\\n  }\\r\\n  \\r\\n  .example-header {\\r\\n    min-height: 54px;\\r\\n    padding: 8px 20px 0;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 12px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 450px;\\r\\n  }\\r\\n  \\r\\n  .customMatError{\\r\\n    position: absolute;\\r\\n    top:30px;\\r\\n    font-size: 10px;\\r\\n    color: coral;\\r\\n}\"","module.exports = \"<ng-template #contentCreateUser>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"createUserForm.User_Id\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Add User</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"createUserForm.User_Id\\\" (click)=\\\"cancelUpdateUser();CreatingUserForm.resetForm()\\\" color=\\\"accent\\\">\\n    <mat-icon>{{'clear'}}</mat-icon>Reset</button>\\n</ng-template>\\n<ng-template #contentUpdateUser>\\n  <button type=\\\"submit\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"createUserForm.User_Id\\\" color=\\\"primary\\\">\\n    <mat-icon>{{'add'}}</mat-icon>Update User</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button value=\\\"createUserForm.User_Id\\\" (click)=\\\"cancelUpdateUser();CreatingUserForm.resetForm()\\\" color=\\\"warn\\\">\\n    <mat-icon>{{'cancel'}}</mat-icon>Cancel</button>\\n</ng-template>\\n<div class=\\\"example-container col-md-4 offset-md-4 mt-4\\\">\\n  <form #CreatingUserForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnUserFormSubmit(CreatingUserForm)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"First Name\\\" required name=\\\"FirstName\\\" [(ngModel)]=\\\"createUserForm.FirstName\\\" #FirstName=\\\"ngModel\\\"\\n      />\\n      <input type=\\\"hidden\\\" [(ngModel)]=\\\"createUserForm.User_Id\\\" name=\\\"User_Id\\\">\\n      <mat-error>\\n        First Name is\\n        <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput required placeholder=\\\"Last Name\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"createUserForm.LastName\\\" #LastName=\\\"ngModel\\\"\\n      />\\n      <mat-error>\\n        Last Name is\\n        <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"number\\\" required placeholder=\\\"Employee Id\\\" name=\\\"Employee_Id\\\" [(ngModel)]=\\\"createUserForm.Employee_Id\\\" #Employee_Id=\\\"ngModel\\\"\\n      />\\n      <mat-error>\\n        Employee Id is\\n        <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n    <div *ngIf=\\\"createUserForm.IsCreate;then contentCreateUser else contentUpdateUser\\\" color=\\\"primary\\\">\\n    </div>\\n  </form>\\n</div>\\n<hr/>\\n<div class=\\\"col-md-8 offset-md-2 mt-4\\\">\\n  <mat-form-field class=\\\"col-md-3\\\">\\n    <input matInput placeholder=\\\"Search\\\" name=\\\"SearchValue\\\" [(ngModel)]=\\\"SearchValue\\\">\\n  </mat-form-field>\\n  <label>Sort By</label>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2 ml-2\\\" value=\\\"\\\" (click)=\\\"sort('FirstName')\\\" color=\\\"primary\\\">\\n    FirstName</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('LastName')\\\" color=\\\"primary\\\">\\n    LastName</button>\\n  <button type=\\\"button\\\" mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"\\\" (click)=\\\"sort('EmpId')\\\" color=\\\"primary\\\">\\n    EmployeeId</button>\\n</div>\\n<div class=\\\"col-md-8 offset-md-2 mt-4\\\">\\n  <ul class=\\\"list-group list-group-flush\\\">\\n    <li *ngFor=\\\"let useritem of userDataSource | FilterPipe: SearchValue; let i=index\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col col-md-10\\\">\\n          <p>\\n            <strong> FirstName:</strong> {{ useritem.FirstName }} </p>\\n          <p>\\n            <strong>LastName:</strong> {{ useritem.LastName }}</p>\\n          <p>\\n            <strong>Employee_Id:</strong> {{ useritem.Employee_Id }}</p>\\n        </div>\\n        <div class=\\\"col col-md-2\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col col-12\\\">\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"editUser(useritem)\\\">\\n                <mat-icon>create</mat-icon> Edit</button>\\n              <br>\\n              <br>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteUser(useritem)\\\">\\n                <mat-icon item-width=\\\"20px\\\">delete</mat-icon> Delete</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </li>\\n\\n    <li *ngIf=\\\"(userDataSource| FilterPipe:SearchValue).length==0\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"alert alert-info\\\">\\n        There are no items to display.\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from '../ErrorStateMatcher';\nimport { UserServiceService } from '../user-service.service';\nimport { User } from '../User';\n\n@Component({\n  selector: 'app-user-manager',\n  templateUrl: './user-manager.component.html',\n  styleUrls: ['./user-manager.component.css']\n})\nexport class UserManagerComponent implements OnInit {\n\n  constructor(private userService: UserServiceService) {\n    // this.createUserForm = new User();\n    // this.createUserForm.IsCreate = true;\n    console.log(\"constructor\");\n  }\n\n  createUserForm: User;\n  userDataSource: User[] = [];\n  SearchValue: string;\n  SortElement: string;\n  \n  userFirstNameSort: boolean = true;\n  userLastNameSort: boolean = true;\n  userEmpIdSort: boolean = true;\n\n  FNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  EmpIdFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  LNameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n    console.log(\"ngOnInit\");\n    this.createUserForm = new User();\n    this.createUserForm.IsCreate = true;\n    this.userService.getUsers().subscribe(a => this.userDataSource = a);\n    this.SortElement = 'FirstName';\n  }\n\n  sort(sortElement: string) {\n    console.log('calling sort' + sortElement);\n    this.SortElement = sortElement;\n    if (sortElement == 'FirstName') {\n      if (this.userFirstNameSort) {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.FirstName.localeCompare(b.FirstName));\n      }\n      else {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.FirstName.localeCompare(b.FirstName)).reverse();\n      }\n      this.userFirstNameSort = !this.userFirstNameSort;\n    }\n    else if (sortElement == 'LastName') {\n      if (this.userLastNameSort) {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.LastName.localeCompare(b.LastName));\n      }\n      else {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.LastName.localeCompare(b.LastName)).reverse();\n      }\n      this.userLastNameSort = !this.userLastNameSort;\n    }\n    else {\n      if (this.userEmpIdSort) {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.Employee_ID - b.Employee_ID);\n      }\n      else {\n        this.userDataSource = this.userDataSource.sort((a, b) => a.Employee_ID - b.Employee_ID).reverse();\n      }\n      this.userEmpIdSort = !this.userEmpIdSort\n    }\n  }\n\n  editUser(user: User) {\n    // this.createUserForm = new User();\n    let localUser: User = new User();\n    localUser.Employee_ID = user.Employee_ID;\n    localUser.IsCreate = false;\n    localUser.FirstName = user.FirstName;\n    localUser.LastName = user.LastName;\n    localUser.User_id = user.User_id;\n    console.log(user);\n    this.createUserForm = localUser;\n    //this.setTextValue = this.userDataSource[user].FirstName;\n\n  }\n  deleteUser(user: User) {\n    this.userService.deleteUsers(user.User_id).subscribe(g => this.userService.getUsers().subscribe(a => this.userDataSource = a));\n  }\n  cancelUpdateUser() {\n    this.createUserForm = new User();\n    this.createUserForm.IsCreate = true;\n  }\n  OnUserFormSubmit(CreateUserForm: NgForm) {\n    console.log(CreateUserForm.value);\n    if (CreateUserForm.valid) {\n\n      let localUser: User = new User();\n      localUser = CreateUserForm.value;\n\n      if (localUser.User_id != undefined && localUser.User_id > 0) {\n        this.userService.updateUsers(CreateUserForm.value, localUser.User_id).subscribe(g => this.userService.getUsers().subscribe(a => this.userDataSource = a));\n        this.createUserForm = new User();\n        this.createUserForm.IsCreate = true;\n        console.log(\"user updated\");\n        CreateUserForm.resetForm();\n      }\n      else {\n        this.userService.addUsers(CreateUserForm.value).subscribe(g => this.userService.getUsers().subscribe(a => this.userDataSource = a));\n        this.createUserForm = new User();\n        this.createUserForm.IsCreate = true;\n        console.log(\"user added\");\n        console.log(this.userDataSource);\n        CreateUserForm.resetForm();\n      }\n    }\n  }\n\n}\n","module.exports = \".example-container{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 250;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n}\\r\\n\\r\\n.example-header{\\r\\n    min-height: 50px;\\r\\n    padding: 5px 15px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field\\r\\n{\\r\\nfont-size: 13px;\\r\\nwidth: 90%;    \\r\\n}\\r\\n\\r\\n.mat-table{\\r\\n    overflow:auto;\\r\\n    max-height: 450px;\\r\\n}\"","module.exports = \"<div class=\\\"example-container\\\">\\n  <mat-dialog-content>\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter Users\\\">\\n    </mat-form-field>\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n      <ng-container matColumnDef=\\\"User_Id\\\">\\n        <mat-header-cell *matHeaderCellDef> User_Id </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let User\\\"> {{User.User_Id}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"FirstName\\\">\\n        <mat-header-cell *matHeaderCellDef> FirstName </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let User\\\"> {{User.FirstName}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"LastName\\\">\\n        <mat-header-cell *matHeaderCellDef> LastName </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let User\\\"> {{User.LastName}} </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let User\\\">\\n          <div>\\n            <button mat-button mat-raised-button class=\\\"mr-2\\\" value=\\\"User.User_Id\\\" [mat-dialog-close]=\\\"User\\\" color=\\\"primary\\\">\\n              Select</button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5]\\\" showFirstLastButtons></mat-paginator>\\n  </mat-dialog-content>\\n</div>\"","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSlideToggleChange, MatPaginator, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { UserServiceService } from '../user-service.service';\nimport { User } from '../User';\nimport { UserDialogData } from '../UserDialogData';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n\n  constructor(private userService: UserServiceService, public dialogRef: MatDialogRef<UserSearchComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: UserDialogData) { }\n  displayedColumns = ['User_Id', 'FirstName', 'LastName', 'Action'];\n  dataSource: MatTableDataSource<User>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  ngOnInit() {\n    this.userService.getUsers().subscribe(a => this.setData(a));\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  setData(data: any) {\n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {observable,of, Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError,map,tap} from 'rxjs/operators';\nimport {User} from './User';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({'content-Type':'application/json'})\n  };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  private UserUrl = 'http://localhost/ProjectManagerAPI/api/User';\n  private UserByUseridUrl = 'http://localhost/ProjectManagerAPI/api/User/';\n  private CreateUserUrl = 'http://localhost/ProjectManagerAPI/api/User';\n  private DeleteUserUrl = 'http://localhost/ProjectManagerAPI/api/User/';\n  private UpdateUserUrl = 'http://localhost/ProjectManagerAPI/api/User/';\n\n  constructor(private http: HttpClient) { }\n\n  private handleError<T>(operation = 'operation',result?:T){\n    return (error:any): Observable<T>=>{\n      console.error(error);\n      console.log('${operation} failed:${error.message}');\n      return of(result as T);\n    };\n  }\n\n  getUsers():Observable<User[]>{\n    console.log('Invoking GetUser................');\nreturn this.http.get<User[]>(this.UserUrl).pipe(\n  catchError(this.handleError('getProject',[]))\n);\n}\n\naddUsers(user: User):Observable<any>{\nconsole.log('Invoking AddUser................');\nreturn this.http.post<boolean>(this.CreateUserUrl,User).pipe(\ncatchError(this.handleError('addUser',[]))\n);\n}\nupdateUsers(user: User,user_id:number):Observable<any>{\nconsole.log('Invoking UpdateUser................');\nreturn this.http.put<boolean>(this.UpdateUserUrl + user_id,User).pipe(\ncatchError(this.handleError('UpdateUser',[]))\n);\n}\n\ndeleteUsers(user_id:number):Observable<any>{\n  console.log('Invoking DeleteUser................');\n  return this.http.delete<boolean>(this.DeleteUserUrl + user_id).pipe(\n  catchError(this.handleError('DeleteUser',[]))\n  );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}